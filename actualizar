#!/usr/bin/env bash
# Made by Sinfallas <sinfallas@yahoo.com>
# Licence: GPL-2
#set -euo pipefail
LC_ALL=C
SECONDS=0
mylog="/var/log/$(basename $0).log"
LOCKFILE="/tmp/$(basename $0)_$(whoami)"
LOCKFD="150"
lock1="/var/lib/dpkg/lock"
lock2="/var/lib/apt/lists/lock"
quien=$(who | cut -d' ' -f1 | sort | uniq)
gdonde="/home/$quien/.gnupg/gpg.conf"

function clean_1() {
	rm -f /run/$(basename $0).pid
	rm -rf /tmp/*
	rm -rf /var/tmp/*
	rm -f $LOCKFILE
	rm -f $lock1
	rm -f $lock2
	killall -q apt dpkg
	dpkg --configure -a
}

function lock() {
	echo {LOCKFD}>$LOCKFILE
	flock -n $LOCKFD
}

function exit_error() {
	echo -e "\e[00;31mYa hay una instancia en ejecuciÃ³n. Saliendo\e[00m"
	exit 1
}

trap "clean_1; exit" 0 1 2 3 15
clear
if [[ "$EUID" != "0" ]]; then
	echo -e "\e[00;31mERROR: Debes ser root.\e[00m"
	exit 1
fi
echo $BASHPID > /run/"$(basename $0)".pid
echo "" > $mylog
exec 2>>$mylog

lock || exit_error

sync; echo 3  > /proc/sys/vm/drop_caches

if ! [[ -f /usr/bin/deborphan ]] || [[ $(dpkg --get-selections | grep -w "deborphan" | awk '{print $1}' | head -1) != deborphan ]]; then
	apt -q update
	apt -qy install deborphan
fi

if ! [[ -f /usr/bin/apt-fast ]] || [[ $(dpkg --get-selections | grep -w "apt-fast" | awk '{print $1}' | head -1) != apt-fast ]]; then
	apt -q update
	apt -qy install apt-fast
fi

echo "Iniciando Actualizacion $(date +%d/%m/%Y)" >> $mylog
echo -e "\e[00;1;92mIniciando Actualizacion\e[00m"
rm -f $lock1
rm -f $lock2
echo -e "\e[00;1;92mActualizando paquetes SNAP\e[00m"
snap refresh
echo -e "\e[00;1;92mActualizando paquetes FLATPAK\e[00m"
flatpak update
echo -e "\e[00;1;92mActualizando paquetes DEB\e[00m"
apt-fast -q update
apt-fast -y --allow-unauthenticated dist-upgrade
echo -e "\e[00;1;92mActualizando firmas de virus de ClamAV\e[00m"
killall -q freshclam
mkdir -p /var/log/clamav
touch /var/log/clamav/freshclam.log
chmod 666 /var/log/clamav/freshclam.log
freshclam
echo -e "\e[00;1;92mActualizando firmas de RKHunter\e[00m"
rkhunter --update
echo -e "\e[00;1;92mLimpiando\e[00m"
apt-fast clean
apt clean
apt -y autoremove
rm -rf /root/.local/share/Trash/*
rm -rf /home/*/.local/share/Trash/*
history -c
echo "" > /home/*/.local/share/fish/fish_history
#echo "" > /home/*/.config/fish/fish_history
echo "" > /root/.local/share/fish/fish_history
#echo "" > /root/.config/fish/fish_history
echo -e "\e[00;1;92mDeborphan\e[00m"
apt -y remove --purge $(deborphan --libdevel) $(deborphan --find-config) $(deborphan)
echo -e "\e[00;1;92mInitramfs\e[00m"
update-initramfs -k all -u
echo -e "\e[00;1;92mGrub\e[00m"
update-grub2
echo -e "\e[00;1;92mRegenerando Caches\e[00m"
fc-cache -fr
update-apt-xapian-index -q
echo -e "\e[00;1;92mPersonalizando\e[00m"
if [[ $(dpkg --get-selections | grep -w "ModemManager" | awk '{print $1}' | head -1) = ModemManager ]]; then
	systemctl disable ModemManager.service
fi
if [[ $(dpkg --get-selections | grep -w "avahi-daemon" | awk '{print $1}' | head -1) = avahi-daemon ]]; then
	systemctl disable avahi-daemon.service
fi
if [[ $(dpkg --get-selections | grep -w "speech-dispatcher" | awk '{print $1}' | head -1) = speech-dispatcher ]]; then
	systemctl disable speech-dispatcher.service
fi
if [[ $(dpkg --get-selections | grep -w "unattended-upgrades" | awk '{print $1}' | head -1) = unattended-upgrades ]]; then
	systemctl disable unattended-upgrades
fi
if [[ $(dpkg --get-selections | grep -w "libvirtd" | awk '{print $1}' | head -1) = libvirtd ]]; then
	systemctl disable libvirtd.socket
fi
if [[ $(dpkg --get-selections | grep -w "libvirtd" | awk '{print $1}' | head -1) = libvirtd ]]; then
	systemctl disable libvirtd
fi
if [[ $(dpkg --get-selections | grep -w "docker" | awk '{print $1}' | head -1) = docker ]]; then
	systemctl disable docker
fi
if [[ $(dpkg --get-selections | grep -w "docker" | awk '{print $1}' | head -1) = docker ]]; then
	systemctl disable containerd
fi
if [[ $(dpkg --get-selections | grep -w "clamav-freshclam" | awk '{print $1}' | head -1) = clamav-freshclam ]]; then
	systemctl disable clamav-freshclam
fi
#systemctl disable pppd-dns.service
#systemctl disable nmbd
systemctl disable apt-daily-upgrade.service
systemctl disable apt-daily.service
systemctl disable brltty-udev.service
systemctl disable brltty.service
systemctl disable geoclue.service
systemctl disable motd-news.service
systemctl disable wacom-inputattach@.service
if [[ $(dpkg --get-selections | grep -w "ssh" | awk '{print $1}' | head -1) = ssh ]]; then
	chmod -R 700 /home/$quien/.ssh
fi
if [[ $(dpkg --get-selections | grep -w "gpg" | awk '{print $1}' | head -1) = gpg ]]; then
	chown $quien:$quien $gdonde
	chmod -R 700 /home/$quien/.gnupg
fi
echo "Finalizado $(date +%d/%m/%Y)" >> $mylog
echo "Duracion $SECONDS segundos" >> $mylog
echo "Duracion $SECONDS segundos"
echo "" >> $mylog
echo -e "\e[00;1;92mFinalizado...\e[00m"
exit 0
